@startuml
'https://plantuml.com/class-diagram

class WeatherData {
    - temperature: Double
    - humidity: Double
    - var pressure: Double
}


interface Observer <T> {
    + update(newState: T)
}

interface WeatherObserver <WeatherData> {
    + update(currState: T, newState: T)
}


interface Subject <T, U> {
    + registerObserver(observer: T): Boolean
    + removeObserver(observer: T): Boolean
    + update(newState: U)
}

class Weather {
    - observers: MutableList<WeatherObserver>
    - state: WeatherData
    - notifyObservers
}

class AirportWeatherObserver {
    - currState: WeatherData
}

class CityCenterWeatherObserver {
    - currState: WeatherData
}



WeatherObserver <|-- AirportWeatherObserver
WeatherObserver <|-- CityCenterWeatherObserver

Subject <|-- Weather
Observer <-- Subject
Observer <|-- WeatherObserver


@enduml
